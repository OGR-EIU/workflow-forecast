<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="3a78e99d-0c5a-4da5-bd36-79aff3850b0f" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>Forecast runner</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="build-params.json&#xA;settings/forecast/forecast-output.json&#xA;report/results/report-forecast.bundle.html" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_78" />
    </disabled-settings>
    <parameters>
      <param name="email.body" value="Dear all, please find EIU PoC Forecast Report attached. Best regards, Ngoc Nam Nguyen" spec="text label='Email message' description='Text of the notification email' validationMode='not_empty'" />
      <param name="email.recipients" value="ngocnam.nguyen@ogresearch.com, jaromir.benes@ogresearch.com, sergey.plotnikov@ogresearch.com" spec="text label='Email recipients' description='List of notification email recipients' validationMode='not_empty'" />
      <param name="email.subject" value="EIU PoC Forecast Report" spec="text label='Email subject' description='Email notification subject' validationMode='not_empty'" />
      <param name="matlab.code.forecast" value="runner('../../model-template', [lower('%workflow.forecast.country%') '-input-mapping.json'], '../../api-client/request-output.json', [lower('%workflow.forecast.country%') '-output-mapping.json'], 'forecast-output.json', true);" />
      <param name="matlab.code.report" value="runner('../api-client/post-output.json', ['../settings/report/' lower('%workflow.forecast.country%') '-input-mapping.json'], true);" />
      <param name="workflow.adhoc.snapshot-time" value="" spec="text label='Snapshot time' description='Snapshot time of the series requested from the data warehouse formatted as YYYY-MM-DDThh:mm:ss.SSSZ. Current datetime is used if not specified.' display='prompt' validationMode='regex' regexp='(^$||\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z)' validationMessage='Should be empty or datetime formatted as YYYY-MM-DDThh:mm:ss.SSSZ'" />
      <param name="workflow.dependencies.data-warehouse-client.commit" value="HEAD" spec="text label='Data Warehouse Client commit' description='Commit id of the Data Warehouse Client repo' display='prompt' validationMode='not_empty'" />
      <param name="workflow.dependencies.iris.commit" value="HEAD" spec="text label='IRIS toolbox commit' description='Commit id of the IRIS toolbox repo' display='prompt' validationMode='not_empty'" />
      <param name="workflow.dependencies.model-infra.commit" value="HEAD" spec="text label='Model infrastructure commit' description='Commit id of the Model infrastructure repo' display='prompt' validationMode='not_empty'" />
      <param name="workflow.dependencies.model-template.commit" value="HEAD" spec="text label='Model template commit' description='Commit id of the Model template repo' display='prompt' validationMode='not_empty'" />
      <param name="workflow.dependencies.report.commit" value="HEAD" spec="text label='Report commit' description='Commit id of the report repo' display='prompt' validationMode='not_empty'" />
      <param name="workflow.dependencies.settings.commit" value="HEAD" spec="text label='Workflow Settings commit' description='Commit id of the Workflow Settings repo' display='prompt' validationMode='not_empty'" />
      <param name="workflow.dependencies.toolset.commit" value="HEAD" spec="text label='Toolset commit' description='Commit id of the Toolset repo' display='prompt' validationMode='not_empty'" />
      <param name="workflow.forecast.country" value="" spec="select description='Country to be forecasted' label='Country code' data_1='EA' display='prompt'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Save build parameters" type="python-runner">
        <parameters>
          <param name="command" value="file" />
          <param name="coverageArgs" value="--omit=*lib*" />
          <param name="envTool" value="none" />
          <param name="installToolPackage" value="true" />
          <param name="isCoverageEnabled" value="false" />
          <param name="isTestReportingEnabled" value="true" />
          <param name="poetryExecutable" value="poetry" />
          <param name="pythonVersion" value="python3" />
          <param name="scriptArguments" value="--props-path %system.teamcity.configuration.properties.file% --params-path build-params.json" />
          <param name="scriptFile" value="toolset/extract_build_params.py" />
          <param name="teamcity.step.mode" value="default" />
          <param name="virtualenvEnvName" value=".venv" />
          <param name="virtualenvFile" value="requirements.txt" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Ensure repo revisions" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash

api_client=%workflow.dependencies.data-warehouse-client.commit%
iris=%workflow.dependencies.iris.commit%
settings=%workflow.dependencies.settings.commit%
toolset=%workflow.dependencies.toolset.commit%
model_infra=%workflow.dependencies.model-infra.commit%
model_template=%workflow.dependencies.model-template.commit%

cd api-client
if [ $api_client != "HEAD" ]; then git checkout $api_client; fi
cd ../iris
if [ $iris != "HEAD" ]; then git checkout $iris; fi
cd ../settings
if [ $settings != "HEAD" ]; then git checkout $settings; fi
cd ../toolset
if [ $toolset != "HEAD" ]; then git checkout $toolset; fi
cd ../model-infra
if [ $model_infra != "HEAD" ]; then git checkout $model_infra; fi
cd ../model-template
if [ $model_template != "HEAD" ]; then git checkout $model_template; fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Forecast step: Load settings" type="python-runner">
        <parameters>
          <param name="command" value="file" />
          <param name="coverageArgs" value="--omit=*lib*" />
          <param name="envTool" value="none" />
          <param name="installToolPackage" value="true" />
          <param name="isCoverageEnabled" value="false" />
          <param name="isTestReportingEnabled" value="true" />
          <param name="poetryExecutable" value="poetry" />
          <param name="pythonVersion" value="python3" />
          <param name="scriptArguments" value="--config-path input-cfg-template.json --output-file adjusted-input-cfg.json --params-json '{&quot;snapshot_time&quot;:&quot;%workflow.adhoc.snapshot-time%&quot;,&quot;geography&quot;:&quot;%workflow.forecast.country%&quot;}'" />
          <param name="scriptFile" value="create_input.py" />
          <param name="teamcity.build.workingDir" value="settings/forecast" />
          <param name="teamcity.step.mode" value="default" />
          <param name="virtualenvEnvName" value=".venv" />
          <param name="virtualenvFile" value="requirements.txt" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="Forecast step: Request data from data warehouse" type="python-runner">
        <parameters>
          <param name="command" value="file" />
          <param name="coverageArgs" value="--omit=*lib*" />
          <param name="envTool" value="venv" />
          <param name="installToolPackage" value="true" />
          <param name="isCoverageEnabled" value="false" />
          <param name="isTestReportingEnabled" value="true" />
          <param name="poetryExecutable" value="poetry" />
          <param name="pythonExecutable" value="/usr/bin/python3.11" />
          <param name="pythonVersion" value="custom" />
          <param name="scriptArguments" value="--settings ../settings/forecast/adjusted-input-cfg.json --save-to request-output.json --username %api.username% --password %api.password%" />
          <param name="scriptFile" value="retrieve_data.py" />
          <param name="teamcity.build.workingDir" value="api-client" />
          <param name="teamcity.step.mode" value="default" />
          <param name="virtualenvEnvName" value=".venv" />
          <param name="virtualenvFile" value="requirements.txt" />
        </parameters>
      </runner>
      <runner id="RUNNER_74" name="Forecast step: Run forecast" type="simpleRunner">
        <parameters>
          <param name="script.content" value="matlab -nodisplay -nodesktop -nosplash -r &quot;%matlab.code.forecast%&quot;; exit $?" />
          <param name="teamcity.build.workingDir" value="settings/forecast" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_6" name="Forecast step: Submit daily data to data warehouse" type="python-runner">
        <parameters>
          <param name="command" value="file" />
          <param name="coverageArgs" value="--omit=*lib*" />
          <param name="envTool" value="venv" />
          <param name="installToolPackage" value="true" />
          <param name="isCoverageEnabled" value="false" />
          <param name="isTestReportingEnabled" value="true" />
          <param name="poetryExecutable" value="poetry" />
          <param name="pythonVersion" value="python3" />
          <param name="scriptArguments" value="--json-request ../settings/forecast/forecast-output.json --username %api.username% --password %api.password%" />
          <param name="scriptFile" value="submit_data.py" />
          <param name="teamcity.build.workingDir" value="api-client" />
          <param name="teamcity.step.mode" value="default" />
          <param name="virtualenvEnvName" value=".venv" />
        </parameters>
      </runner>
      <runner id="RUNNER_75" name="Report step: Load settings" type="python-runner">
        <parameters>
          <param name="command" value="file" />
          <param name="coverageArgs" value="--omit=*lib*" />
          <param name="envTool" value="none" />
          <param name="installToolPackage" value="true" />
          <param name="isCoverageEnabled" value="false" />
          <param name="isTestReportingEnabled" value="true" />
          <param name="poetryExecutable" value="poetry" />
          <param name="pythonVersion" value="python3" />
          <param name="scriptArguments" value="--config-path input-cfg-template.json --output-file adjusted-input-cfg.json --params-json '{&quot;snapshot_time&quot;:&quot;%workflow.adhoc.snapshot-time%&quot;,&quot;geography&quot;:&quot;%workflow.forecast.country%&quot;}'" />
          <param name="scriptFile" value="create_input.py" />
          <param name="teamcity.build.workingDir" value="settings/report" />
          <param name="teamcity.step.mode" value="default" />
          <param name="virtualenvEnvName" value=".venv" />
          <param name="virtualenvFile" value="requirements.txt" />
        </parameters>
      </runner>
      <runner id="RUNNER_76" name="Report step: Request data from data warehouse" type="python-runner">
        <parameters>
          <param name="command" value="file" />
          <param name="coverageArgs" value="--omit=*lib*" />
          <param name="envTool" value="venv" />
          <param name="installToolPackage" value="true" />
          <param name="isCoverageEnabled" value="false" />
          <param name="isTestReportingEnabled" value="true" />
          <param name="poetryExecutable" value="poetry" />
          <param name="pythonExecutable" value="/usr/bin/python3.11" />
          <param name="pythonVersion" value="custom" />
          <param name="scriptArguments" value="--settings ../settings/report/adjusted-input-cfg.json --save-to post-output.json --username %api.username% --password %api.password%" />
          <param name="scriptFile" value="retrieve_data.py" />
          <param name="teamcity.build.workingDir" value="api-client" />
          <param name="teamcity.step.mode" value="default" />
          <param name="virtualenvEnvName" value=".venv" />
          <param name="virtualenvFile" value="requirements.txt" />
        </parameters>
      </runner>
      <runner id="RUNNER_77" name="Report step: Generate report" type="simpleRunner">
        <parameters>
          <param name="script.content" value="matlab -nodisplay -nodesktop -nosplash -r &quot;%matlab.code.report%&quot;; exit $?" />
          <param name="teamcity.build.workingDir" value="report" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_78" name="Report step: Send email" type="python-runner">
        <parameters>
          <param name="command" value="file" />
          <param name="coverageArgs" value="--omit=*lib*" />
          <param name="envTool" value="none" />
          <param name="installToolPackage" value="true" />
          <param name="isCoverageEnabled" value="false" />
          <param name="isTestReportingEnabled" value="true" />
          <param name="poetryExecutable" value="poetry" />
          <param name="pythonExecutable" value="/usr/bin/python3.11" />
          <param name="pythonVersion" value="custom" />
          <param name="scriptArguments" value="--subject '%email.subject%' --recipients '%email.recipients%' --body '%email.body%' --attachment './report/results/report-forecast.bundle.html'" />
          <param name="scriptFile" value="toolset/send_mail.py" />
          <param name="teamcity.step.mode" value="default" />
          <param name="virtualenvEnvName" value=".venv" />
          <param name="virtualenvFile" value="requirements.txt" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="ExampleWorkflows_ApiClient">
        <checkout-rule rule="+:. =&gt; api-client" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="ExampleWorkflows_Iris">
        <checkout-rule rule="+:. =&gt; iris" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="ExampleWorkflows_Toolset">
        <checkout-rule rule="+:. =&gt; toolset" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="ExampleWorkflows_ModelInfra">
        <checkout-rule rule="+:. =&gt; model-infra" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="ExampleWorkflows_WorkflowForecast">
        <checkout-rule rule="+:. =&gt; settings" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="ExampleWorkflows_ModelTemplate">
        <checkout-rule rule="+:. =&gt; model-template" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="ExampleWorkflows_ReportForecast">
        <checkout-rule rule="+:. =&gt; report" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements>
      <equals id="RQ_1" name="system.agent.name" value="Agent 2-1" />
    </requirements>
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

