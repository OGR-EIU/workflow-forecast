name: Prepare local forecast package

permissions:
  actions: write

on:
  workflow_dispatch:
    inputs:
      model_repo:
         description: "Country model repo"
         required: true
         type: choice
         options:
           - "Model-US"
           - "Model-EA"
           - "Model-CZ"
      model_repo_ref:
          description: "Country model version"
          required: false
          type: string
          default: ""
      input_data_snapshot_time:
          description: "Input data snapshot time"
          required: false
          type: string
          default: ""
      model_infra_repo_ref:
          description: "Model infrastructure version"
          required: false
          type: string
          default: ""
      toolset_repo_ref:
          description: "Toolset version"
          required: false
          type: string
          default: ""


jobs:

  prepare_local_environment:
    runs-on: ubuntu-latest
    env:
      CI_AUTHOR: "Production workflow"
      CI_EMAIL: "noreply@ogresearch.com"
      WORKFLOW_FORECAST_REPO: "workflow-forecast"
      MODEL_INFRA_REPO: "model-infra"
      TOOLSET_REPO: "toolset"

    steps:

      - name: Clone country model repo
        uses: actions/checkout@v3
        with:
          repository: OGR-EIU/${{ inputs.model_repo }}
          ref: ${{ inputs.model_repo_ref }}
          fetch-depth: 1
          path: ./${{ inputs.model_repo }}
          token: ${{ secrets.token_with_all_access }}

      - name: Get SHA of model repo
        id: model_repo
        run: |
          cd $GITHUB_WORKSPACE/${{ inputs.model_repo }}
          SHA="$(git rev-parse --short HEAD)"
          echo "SHA=$SHA" >> $GITHUB_OUTPUT
          cd $GITHUB_WORKSPACE



      - name: Clone model infra repo
        uses: actions/checkout@v3
        with:
          repository: OGR-EIU/model-infra
          ref: ${{ inputs.model_infra_repo_ref }}
          fetch-depth: 1
          path: ./model-infra
          token: ${{ secrets.token_with_all_access }}

      - name: Get SHA of model infra repo
        id: model_infra_repo
        run: |
          cd $GITHUB_WORKSPACE/model-infra
          SHA="$(git rev-parse --short HEAD)"
          echo "SHA=$SHA" >> $GITHUB_OUTPUT
          cd $GITHUB_WORKSPACE



      - name: Clone toolset repo
        uses: actions/checkout@v3
        with:
          repository: OGR-EIU/toolset
          ref: ${{ inputs.toolset_repo_ref }}
          fetch-depth: 1
          path: ./toolset
          token: ${{ secrets.token_with_all_access }}

      - name: Get SHA of toolset repo
        id: toolset_repo
        run: |
          cd $GITHUB_WORKSPACE/toolset
          SHA="$(git rev-parse --short HEAD)"
          echo "SHA=$SHA" >> $GITHUB_OUTPUT
          cd $GITHUB_WORKSPACE



      - name: Clone workflow repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: "./workflow-forecast"
          token: ${{ secrets.token_with_all_access }}

      - name: Create timestamp and branch name
        id: stamp
        run: |
          if [[ _${{ inputs.input_data_snapshot_time }} == "_" ]]; then
            timestamp="$(date -uIseconds)U"
          else
            timestamp=${{ inputs.input_data_snapshot_time }}
          fi
          forecast_branch_name="forecast-${{ inputs.model_repo }}-$timestamp"
          forecast_branch_name="${forecast_branch_name//:/-}"
          echo "timestamp=$timestamp" >> $GITHUB_OUTPUT
          echo "forecast_branch_name=$forecast_branch_name" >> $GITHUB_OUTPUT

      - name: Create main forecast branch on workflow-forecast repo and get its SHA
        id: workflow_forecast_repo
        run: |
          cd $GITHUB_WORKSPACE/workflow-forecast
          forecast_branch_name=${{ steps.stamp.outputs.forecast_branch_name }}
          #
          git config user.name "${{ env.CI_AUTHOR }}"
          git config user.email "${{ env.CI_EMAIL }}"
          #
          git switch -c "$forecast_branch_name"
          # git commit -m "Prepared $forecast_branch_name"
          git push origin "$forecast_branch_name"
          SHA="$(git rev-parse --short HEAD)"
          echo "SHA=$SHA" >> $GITHUB_OUTPUT
          #
          cd $GITHUB_WORKSPACE

      - name: Prepare artifact for local envi
        run: |
          cd $GITHUB_WORKSPACE
          mkdir ./artifact
          #
          cp ./workflow-forecast/.github/workflows/prepare_local_environment.py ./artifact/prepare_local_environment.py
          #
          forecast_branch_name=${{ steps.stamp.outputs.forecast_branch_name }}
          timestamp=${{ steps.stamp.outputs.timestamp }}
          workflow_forecast_repo=${{ env.WORKFLOW_FORECAST_REPO }}
          workflow_forecast_repo_SHA=${{ steps.workflow_forecast_repo.outputs.SHA }}
          model_repo=${{ inputs.model_repo }}
          model_repo_SHA=${{ steps.model_repo.outputs.SHA }}
          model_infra_repo=${{ env.MODEL_INFRA_REPO }}
          model_infra_repo_SHA=${{ steps.model_infra_repo.outputs.SHA }}
          toolset_repo=${{ env.TOOLSET_REPO }}
          toolset_repo_SHA=${{ steps.toolset_repo.outputs.SHA }}
          echo '{' > ./artifact/config.json
          printf '    "%s": "%s",\n' forecast_branch_name $forecast_branch_name >> ./artifact/config.json
          printf '    "%s": "%s",\n' timestamp $timestamp >> ./artifact/config.json
          printf '    "%s": "%s",\n' workflow_forecast_repo $workflow_forecast_repo >> ./artifact/config.json
          printf '    "%s": "%s",\n' workflow_forecast_repo_SHA $workflow_forecast_repo_SHA >> ./artifact/config.json
          printf '    "%s": "%s",\n' model_repo $model_repo >> ./artifact/config.json
          printf '    "%s": "%s",\n' model_repo_SHA $model_repo_SHA >> ./artifact/config.json
          printf '    "%s": "%s",\n' model_infra_repo $model_infra_repo >> ./artifact/config.json
          printf '    "%s": "%s",\n' model_infra_repo_SHA $model_infra_repo_SHA >> ./artifact/config.json
          printf '    "%s": "%s",\n' toolset_repo $toolset_repo >> ./artifact/config.json
          printf '    "%s": "%s",\n' toolset_repo_SHA $toolset_repo_SHA >> ./artifact/config.json
          echo '    "end": ""' >> ./artifact/config.json
          echo '}' >> ./artifact/config.json

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: start-${{ steps.stamp.outputs.forecast_branch_name }}
          path: ./artifact

      - name: Create and commit the ANALYST forecast branch
        run: |
          cd $GITHUB_WORKSPACE/workflow-forecast
          #
          forecast_branch_name=${{ steps.stamp.outputs.forecast_branch_name }}
          git switch -c "$forecast_branch_name-ANALYST"
          git push origin "$forecast_branch_name-ANALYST"
          #
          cd $GITHUB_WORKSPACE


